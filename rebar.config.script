IsRebar3 = case application:get_key(rebar, vsn) of
               {ok, VSN} ->
                   [VSN1 | _] = string:tokens(VSN, "-"),
                   [Maj, Min, Patch] = string:tokens(VSN1, "."),
                   (list_to_integer(Maj) >= 3);
               undefined ->
                   false
           end,

Rebar2Deps = [
              {idna, ".*",
               {git, "https://github.com/benoitc/erlang-idna",
                {tag, "1.0.2"}}},

              {mimerl, ".*",
                {git, "https://github.com/benoitc/mimerl",
                 {tag, "1.0.0"}}},

              {certifi, ".*",
               {git, "https://github.com/certifi/erlang-certifi",
                {tag, "0.2.0"}}},

              {ssl_verify_hostname, ".*",
               {git, "https://github.com/deadtrickster/ssl_verify_hostname.erl",
                {tag, "1.0.5"}}},

              {lru, ".*",
               {git, "https://github.com/barrel-db/erlang-lru.git",
                {tag, "1.3.1"}}},

              {metrics, ".*",
               {git, "https://github.com/benoitc/metrics.git",
                {tag, "0.1.0"}}}

             ],

case IsRebar3 of
    true -> CONFIG;
    false ->
        lists:keyreplace(deps, 1, CONFIG, {deps, Rebar2Deps})
end.
